#include <stdio.h>
#include <stdlib.h>

void display();
void delend();
void insertend();
void delpos();
void delbeg();

struct Node {
    int data;
    struct Node* link;
};

typedef struct Node node;

node* new1, *start = NULL;
int ch;

void main() {
    while (1) {
        printf("Enter your Choice:\n");
        printf("1: Insert at the end\n");
        printf("2: Delete at the end\n");
        printf("3: Delete at the beginning\n");
        printf("4: Delete at a position\n");
        printf("5: Display\n");
        printf("6: Exit\n");
        scanf("%d", &ch);

        switch (ch) {
            case 1: 
                insertend(); 
                break;
            case 2: 
                delend(); 
                break;
            case 3: 
                delbeg(); 
                break;
            case 4: 
                delpos(); 
                break;
            case 5: 
                display(); 
                break;
            case 6: 
                exit(0); 
                break;
            default: 
                printf("Invalid choice\n");
                break;
        }
    }
}

void insertend() {
    new1 = (node*)malloc(sizeof(node));
    if (new1 == NULL) {
        printf("Memory allocation failed\n");
        return;
    }

    printf("Enter value: ");
    scanf("%d", &new1->data);
    new1->link = NULL;

    if (start == NULL) {
        start = new1;
        return;
    }

    node* temp = start;
    while (temp->link != NULL) {
        temp = temp->link;
    }
    
    temp->link = new1;
}

void delbeg() {
    if (start == NULL) {
        printf("Linked list is empty\n");
        return;
    }

    node* temp = start;
    start = start->link;
    free(temp);
}

void delend() {
    if (start == NULL) {
        printf("Linked list is empty\n");
        return;
    }

    if (start->link == NULL) {
        free(start);
        start = NULL;
        return;
    }

    node* temp = start;
    while (temp->link != NULL && temp->link->link != NULL) {
        temp = temp->link;
    }

    free(temp->link);
    temp->link = NULL;
}

void delpos() {
    int pos;
    printf("Enter the position: ");
    scanf("%d", &pos);

    if (start == NULL || pos <= 0) {
        printf("Invalid position or empty list\n");
        return;
    }

    node* temp = start;
    node* prev = NULL;

    int count = 1;
    while (temp != NULL && count < pos) {
        prev = temp;
        temp = temp->link;
        count++;
    }

    if (temp == NULL) {
        printf("Position out of range\n");
        return;
    }

    if (prev == NULL) {
        start = temp->link;
    } else {
        prev->link = temp->link;
    }

    free(temp);
}

void display() {
    if (start == NULL) {
        printf("Linked list is empty\n");
        return;
    }

    node* temp = start;
    printf("Elements of the linked list are: ");
    while (temp != NULL) {
        printf("%d", temp->data);
        temp = temp->link;
        if (temp != NULL) {
            printf(" -> ");
        }
    }
    printf("\n");
}
